
@{
    ViewBag.Title = "Quản Lý Học Sinh";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@Html.Partial("_PartialGrid")
<div class="container-fluid" style="margin-top:15px;padding-top:15px;">
    <h3>Quản lý học sinh</h3>
    <div class="card-header">
        <div class="row mb-2">
            <div class="col-md-4">
                Trường:
                @Html.DropDownList("SchoolID", (IEnumerable<SelectListItem>)ViewBag.SchoolList, new { @class = "form-control" })
            </div>
            <div class="col-md-1">
                Lớp:
                @Html.DropDownList("ClassID", (IEnumerable<SelectListItem>)ViewBag.Class, new { @class = "form-control" })
            </div>
            <div class="col-md-2">
                Niên khóa:
                @Html.DropDownList("ConfigureID", (IEnumerable<SelectListItem>)ViewBag.Config, new { @class = "form-control" })
            </div>
            <div class="col-md-5 pt-4">
                <button class="btn btn-outline-danger" onclick="WarnDelete()">Xóa</button>
                <button class="btn btn-outline-primary" onclick="SwitchClass()">Chuyển Lớp</button>
                <button class="btn btn-outline-warning float-right" onclick="Submit()">Cập nhật</button>
            </div>
        </div>
    </div>
    <div id="myGrid" style="height: 600px;width:100%;" class="ag-theme-balham"></div>

    <div class="modal fade" id="SwitchClassModal">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Chuyển lớp: </h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    <p id="stdShow" class="align-content-center"></p>
                    <div class="row mb-2">
                        <p class="col-2 pt-1">Trường: </p>
                        <select id="SchoolSwitch" class="form-control col-10"></select>
                    </div>
                    <div class="row">
                        <p class="col-2 pt-1">Lớp</p>
                        <select  id="ClassSwitch" class="form-control col-10" ></select>
                    </div>
                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" onclick="Switch()" class="btn btn-danger">Chuyển</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                </div>

            </div>
        </div>
    </div>
    <script>
        var Student = {};
        var CurrentData = [];
        var SwitchModal = $('#SwitchClassModal');
        // specify the columns
        var columnDefs = [
            { headerName: "Mã tài khoản", field: "Identifier", editable: false, resizable: true },
            { headerName: "Họ và tên", field: "FullName", editable: true, resizable: true },
            {
                headerName: "Ngày sinh",
                field: "DateOfBirth",
                editable: true, resizable: true,
                cellEditor: DateEditor,
                suppressSizeToFit:true
            },
            {
                headerName: "Giới tính", field: "Gender",
                editable: true, resizable: true,
                cellEditor: 'agSelectCellEditor',
                cellEditorParams: {
                    values: ['Nam', 'Nữ']
                }
            },
            {
                headerName: "Trạng thái", field: "Status",
                editable: true, resizable: true,
                cellEditor: 'agSelectCellEditor',
                cellEditorParams: {
                    values: ['Non-Active', 'Active']
                }
            },
        ];

        // specify the data
        var rowData = [];

        // let the grid know which columns and what data to use
        var gridOptions = {
            columnDefs: columnDefs,
            rowData: rowData,
            rowSelection: 'single',
            onSelectionChanged: onSelectionChanged,
            headerHeight: '28px'
        };
        function onSelectionChanged() {
            var selectedRows = gridOptions.api.getSelectedRows();
            Student.Identifier = selectedRows[0].Identifier;
            Student.FullName = selectedRows[0].FullName;
        }
        // lookup the container we want the Grid to use
        var eGridDiv = document.querySelector('#myGrid');

        // create the grid passing in the div to use together with the columns & data we want to use
        new agGrid.Grid(eGridDiv, gridOptions);
        function AddRow() {
            var newItem = { Identifier: null, FullName: null, DateOfBirth: null, Gender: 'Nam' };
            var res = gridOptions.api.updateRowData({ add: [newItem] });
            console.log(res);
        }
        function RemoveSelected() {
            var selectedData = gridOptions.api.getSelectedRows();
            var res = gridOptions.api.updateRowData({remove: selectedData});
            console.log(res);
        }
        
    </script>
    <script>
        var schoolID, classID, Config;
        var confirmModal = $('#deleteModal');
        $(document).ready(function () {
            schoolID = $('#SchoolID').children("option:selected").val();
            classID = $('#ClassID').children("option:selected").val();
            Config = $('#ConfigureID').children("option:selected").val();
            GetData();
        });
        $('#ClassID').change(() => {
            classID = $('#ClassID').children("option:selected").val();
            GetData();
        });
        $('#ConfigureID').change(() => {
            GetData();
        });
        $('#SchoolID').change(() => {
            ClearData();
            schoolID = $('#SchoolID').children("option:selected").val();
            GetClass(schoolID);
            classID = $('#ClassID').children("option:selected").val();
        });
        $('#SchoolSwitch').change(() => {
            let sID = $('#SchoolSwitch').children("option:selected").val();
            GetClassModal(sID);
        });
    </script>
    <script>
        // Các function utilities
        function getAllRows() {
            let rowData = [];
            gridOptions.api.forEachNode(node => rowData.push(node.data));
            return rowData.map((e) => {
                return { ...e, Gender: e.Gender == 'Nam' ? 0 : 1, Status: e.Status == 'Non-Active' ? 0 : 1}
            });
        }
        function compareData(arr1, arr2) {
            console.log(arr1);
            console.log(arr2);
            let diff = arr1.filter((e) => {
                return arr2.some((e2) => e2.Identifier === e.Identifier
                    && e2.FullName === e.FullName
                    && e2.DateOfBirth === e.DateOfBirth
                    && e2.Gender === e.Gender
                    && e2.Status === e.Status
                )
            });
            return diff.length === arr1.length;
        }
        
        //Check ko bỏ trống trường nào
        function Validate(dat) {
            let re = dat.every((e) => {
                return Object.values(e).every((sub) => {
                        //console.log(sub);
                        return (sub || sub === 0) ? true : false;
                    })
            });
            return re;
        }
        function ToJavaScriptDate(value) {
            // Trả về chuỗi ngày tháng dạng MM//DD/YYYY TỪ dạng /Date(1525730400000)//
            var pattern = /Date\(([^)]+)\)/;
            var results = pattern.exec(value);
            var dt = new Date(parseFloat(results[1]));
            return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
        }
    </script>
    <script>
        function ClearData() {
             gridOptions.api.setRowData([]);
        }
        var GetClass = function (id) {
            $.ajax({
                type: "POST",
                url: '/Admin/GetClassBySchoolID',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ id: id }),
                dataType: "json",
                success: function (data) {
                    $('#ClassID').empty();
                    if (data.length > 0) {
                        var count = 1;
                        data.forEach((e) => {
                            $('#ClassID').append('<option value=' + e.ClassID + ' ' + (count === 1 ? 'selected' : '') +'>' + e.ClassName + '</option>');
                            count++;
                        });
                    }
                    GetData();
                },
                error: function () {
                    var notify = $.notify('<strong>Lỗi</strong><br/>Lỗi hệ thống<br />', {
                        type: 'pastel-danger',
                        allow_dismiss: false,
                        timer: 1000,
                    });
                }
            });
        }
        var GetClassModal = function (id) {
            axios.post('/Admin/GetClassBySchoolID', { id: id }).then(resp => {
                $('#ClassSwitch').empty();
                if (resp.data.length > 0) {
                    var check = true;
                    resp.data.forEach((e) => {
                        $('#ClassSwitch').append('<option value=' + e.ClassID + ' ' + (check === true ? 'selected' : '') + '>' + e.ClassName + '</option>');
                        check = false;
                    });
                }
            }).catch((e) => {
                var notify = $.notify('<strong>Lỗi</strong><br/>Lỗi hệ thống<br />', {
                        type: 'pastel-danger',
                        allow_dismiss: false,
                        timer: 1000,
                    });
            });
        }
        function GetData() {
            classID = $('#ClassID').children("option:selected").val();
            Config = $('#ConfigureID').children("option:selected").val();
            axios.post('/Admin/GetStudent', { ClassID: classID, ConfigureID: Config }).then(resp => {
                ClearData();
                let newdata = [];
                resp.data.forEach((e) => {
                    newRow = {
                        Identifier: e.Identifier,
                        FullName: e.FullName,
                        DateOfBirth: ToJavaScriptDate(e.DateOfBirth),
                        Gender: e.Gender == 0 ? 'Nam' : 'Nữ',
                        Status: e.Status == 0 ? 'Non-Active' : 'Active'
                    };
                    newdata.push({...e,DateOfBirth: ToJavaScriptDate(e.DateOfBirth)});
                    gridOptions.api.updateRowData({ add: [newRow] });
                });
                CurrentData = newdata;
                gridOptions.api.sizeColumnsToFit();
            }).catch((err) => {
                //swal("Lỗi", "Lỗi hệ thống", "error");
                var notify = $.notify('<strong>Lỗi</strong><br/>Lỗi hệ thống<br />', {
                        type: 'pastel-danger',
                        allow_dismiss: false,
                        timer: 1000,
                    });
            });
           
        }
        function WarnDelete() {
            if (!Student.FullName) {
                swal('Lỗi', 'Bạn chưa chọn học sinh', 'warning');
            }
            else {
                swal({
                    title: "Bạn chắc chứ ?",
                    text: "Bạn có chắc muốn xóa học sinh: " + Student.FullName,
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                .then((willDelete) => {
                    if (willDelete) {
                        $.ajax({
                            type: "POST",
                            url: '/Admin/DeleteStudent',
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({ Identifier: Student.Identifier }),
                            dataType: "json",
                            success: function (data) {
                                ClearData();
                                swal("Thành công", data, "success");
                                GetData();
                            },
                            error: function () {
                                swal("Lỗi", "Lỗi hệ thống", "error");
                            }
                        });

                    } else {
                    }
                });
            }
        }
        var Submit = function () {
            $('#overlay').fadeIn();
            var data = getAllRows();
            var checkFill = Validate(data);
            //Check đã sửa gì hay chưa
            var isUpdated = !compareData(CurrentData, data);
            if (data.length > 0 && checkFill === true && isUpdated === true) {
                Config = $('#ConfigureID').children("option:selected").val();
                classID = $('#ClassID').children("option:selected").val();
                axios.post('/Admin/UpdateBatchStudent', {students:data}).then(resp => {
                    swal('Thành công', resp.data.message, 'success');
                    GetData();
                    $('#overlay').fadeOut();
                }).catch((e) => {
                    swal('Lỗi', 'Đã xảy ra lỗi', 'error');
                    $('#overlay').fadeOut();
                });
            }
            else {
                if (getAllRows().length === 0) {
                     swal("Lỗi", "Chưa có học sinh để cập nhật", "error");
                }
                else if (!isUpdated) {
                    swal("Lỗi", "Bạn chưa chỉnh sửa gì", "warning");
                }
                else if (!checkFill) {
                    swal("Lỗi", "Bạn nhập chưa đủ thông tin", "warning");
                }
                $('#overlay').fadeOut();
            }
        }
        function SwitchClass() {
            if (!Student.FullName) {
                swal('Lỗi', 'Bạn chưa chọn học sinh', 'warning');
            }
            else {
                $('#SchoolSwitch').empty();
                var options = $("#SchoolID > option").clone();
                $('#SchoolSwitch').append(options);

                $('#ClassSwitch').empty();
                var op2 = $("#ClassID > option").clone();
                $('#ClassSwitch').append(op2);

                SwitchModal.find('#stdShow').text(Student.FullName);
                SwitchModal.modal('show');
            }
        }
        function Switch() {
            var cID = $('#ClassSwitch').children("option:selected").val();
            axios.post('/Admin/SwitchClass', { ClassID: cID, Identifier: Student.Identifier }).then(resp => {
                let result = resp.data.success;
                if (result) {
                    swal('Thành công', resp.data.message, 'success');
                    GetData();
                }
                else {
                    swal('Lỗi', resp.data.message, 'error');
                }
                SwitchModal.modal('hide');
            }).catch((e) => {
                var notify = $.notify('<strong>Lỗi</strong><br/>Lỗi hệ thống<br />', {
                        type: 'pastel-danger',
                        allow_dismiss: false,
                        timer: 1000,
                });
                SwitchModal.modal('hide');
                GetData();
            });
        }
    </script>
</div>